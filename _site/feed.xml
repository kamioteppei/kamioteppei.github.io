<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2019-02-08T20:49:28+09:00</updated><id>http://0.0.0.0:4000/</id><title type="html">kamioteppei.github.io</title><subtitle>kamioteppeiの学習備忘録です｡
</subtitle><author><name>kamioteppei</name></author><entry><title type="html">AWS</title><link href="http://0.0.0.0:4000/2018/12/01/aws/" rel="alternate" type="text/html" title="AWS" /><published>2018-12-01T00:00:00+09:00</published><updated>2018-12-01T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/12/01/aws</id><content type="html" xml:base="http://0.0.0.0:4000/2018/12/01/aws/">&lt;p&gt;Udemyの&lt;a href=&quot;https://www.udemy.com/aws-14days/learn/v4/overview&quot;&gt;手を動かしながら2週間で学ぶ AWS 基本から応用まで&lt;/a&gt;を受講します。&lt;/p&gt;

&lt;p&gt;セール時の1300円で購入でき、かつ、内容は、動画という形態なので、書籍よりも頭に入りやすいです。よってコスパは最高です。&lt;/p&gt;</content><author><name>kamioteppei</name></author><summary type="html">Udemyの手を動かしながら2週間で学ぶ AWS 基本から応用までを受講します。</summary></entry><entry><title type="html">Machine Learning 2</title><link href="http://0.0.0.0:4000/2018/09/17/Machine-Learning-2/" rel="alternate" type="text/html" title="Machine Learning 2" /><published>2018-09-17T00:00:00+09:00</published><updated>2018-09-17T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/09/17/Machine-Learning-2</id><content type="html" xml:base="http://0.0.0.0:4000/2018/09/17/Machine-Learning-2/">&lt;p&gt;機械学習の環境を作成する。(GPU使用)&lt;/p&gt;

&lt;p&gt;前回セットアップした、PCは、NVIDIAのGPUが使えない。&lt;br /&gt;
CentOSの入っているデスクトップPCにNVIDIAのグラボが入っているので、&lt;br /&gt;
こちらをUbuntu + GPU + Docker + Tensorflowの環境にセットアップする。&lt;/p&gt;

&lt;h2 id=&quot;バージョン情報&quot;&gt;バージョン情報&lt;/h2&gt;

&lt;p&gt;インストール後結果確認&lt;/p&gt;

&lt;p&gt;Kernel&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ uname -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;Linux desktopubuntu 4.15.0-34-generic&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ubuntu&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat /etc/os-release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;VERSION=”Ubuntu 18.04.01 lts (Bionic Beaver)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;または&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat /etc/lsb-release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;gcc&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gcc --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;gcc (Ubuntu 7.3.0-16ubuntu3) 7.3.0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NVIDIA(GPU)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ lspci | grep -t nvidia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;GeForce GTX 960&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NVIDIA(ドライバ)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat /proc/driver/nvidia/version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;NVIDIA UNIX x86_64 Kernel Module  390.87&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Docker&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;Docker version 18.06.1-ce&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;インストール&quot;&gt;インストール&lt;/h2&gt;

&lt;h3 id=&quot;gcc&quot;&gt;gcc&lt;/h3&gt;
&lt;p&gt;NVIDIAドライバのインストールに必要。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;nvidiaドライバ&quot;&gt;NVIDIAドライバ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://nc30mtd.oops.jp/blog/2016/09/titan-xcuda.html&quot;&gt;参照&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;gccは上記でインストール済み。&lt;/p&gt;

&lt;p&gt;デフォルトのドライバのnouveauが競合して、インストールできないので無効にする。&lt;br /&gt;
nouveauの起動確認&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ lsmod | grep nouveau
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ブラックリストに入れて立ち上がらないようにする&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /etc/modprobe.d/blacklist-nouveau.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ファイルに書き込む内容は次の通り。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;blacklist nouveau
blacklist lbm-nouveau
options nouveau modeset=0
alias nouveau off
alias lbm-nouveau off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;もう１つファイルを作成する。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /etc/modprobe.d/nouveau-kms.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ファイルに書き込む内容は次の通り。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;options nouveau modeset=0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;次のコマンドを実行して再起動する。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo update-initramfs -u
$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nouveauが表示されないことを確認する。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ lsmod | grep nouveau
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;NVIDIAドライバをインストールする。&lt;br /&gt;
オプションは不要だが、ダメならつける。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo sh ./NVIDIA-Linux-x86_64-390.87.run -a --disable-nouveau
$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上記とは別のconfigファイルを作成するか聞かれるが、多分不要。
32bitがどうだこうだいう警告は無視してインストールする。&lt;/p&gt;

&lt;p&gt;GPUの動作確認&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nvidia-smi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;GPUの機種名(GeForce GTX 960)が表示されればOK&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;インストール後の注意&lt;/strong&gt;
hostのubuntuのapt-updateかapt-upgradeをした後に、hostを再起動すると、
dockerのコンテナ起動時にエラーが発生する。内容は、cuda9.0がどうだこうだと表示される。
この場合に上記の&lt;code class=&quot;highlighter-rouge&quot;&gt;nvidia-smi&lt;/code&gt;コマンドを打って、コマンドエラーになった場合は、NVIDIAドライバが
apt-updateによる影響で、おかしくなっているので、もう一度、上記手順で、NVIDIAドライバを再インストールする。&lt;/p&gt;

&lt;h3 id=&quot;docker&quot;&gt;Docker&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/memos/docker&quot;&gt;Dockerのまとめ&lt;/a&gt;にしたがって、インストール&lt;/p&gt;

&lt;h3 id=&quot;nvidia-docker&quot;&gt;Nvidia Docker&lt;/h3&gt;
&lt;p&gt;nvidia-docker2を入れる。そうすれば、ホストに、&lt;br /&gt;
CUDA,CUDA toolkit,cuDNNをインストールしなくても、&lt;br /&gt;
Dockerに上記をインストール済みのコンテナを使用すれば良い。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/NVIDIA/nvidia-docker&quot;&gt;nvidia-dockerのGitHub&lt;/a&gt;にしたがって、インストール&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# If you have nvidia-docker 1.0 installed: we need to remove it and all existing GPU containers
docker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f
sudo apt-get purge -y nvidia-docker

# Add the package repositories
curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \
  sudo apt-key add -
distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \
  sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update

# Install nvidia-docker2 and reload the Docker daemon configuration
sudo apt-get install -y nvidia-docker2
sudo pkill -SIGHUP dockerd

# Test nvidia-smi with the latest official CUDA image
docker run --runtime=nvidia --rm nvidia/cuda:9.0-base nvidia-smi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;何をやってもどこかが合わない&quot;&gt;何をやってもどこかが合わない&lt;/h2&gt;
&lt;p&gt;1週間ほど試行錯誤したが、ダメだった。&lt;br /&gt;
tensorflowの公式サイトだったり、DockerHubに記載されている、docker pullコマンドのイメージは、
タグを省略していて、自分が使用したいものを、正しく指定できてないといけない。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nvidia公式のimageは、cuDNNがインストールされていなかった。&lt;/li&gt;
  &lt;li&gt;tensorflow公式のimageは、whlファイルにtensorflowが入っていたがよく分からなかった。&lt;/li&gt;
  &lt;li&gt;fastaiのimageは、セットアップファイルや、ymlファイル等色々あるので、よく分からなかった。&lt;/li&gt;
  &lt;li&gt;fastai1のdockerfileをbuildしても、途中でエラーになった。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;結局こうした&quot;&gt;結局こうした&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/local_environment_for_deep_learning.png&quot; alt=&quot;local_environment_for_deep_learning.png&quot; /&gt;&lt;/p&gt;</content><author><name>kamioteppei</name></author><summary type="html">機械学習の環境を作成する。(GPU使用)</summary></entry><entry><title type="html">Machine Learning</title><link href="http://0.0.0.0:4000/2018/09/10/Machine-Learning/" rel="alternate" type="text/html" title="Machine Learning" /><published>2018-09-10T00:00:00+09:00</published><updated>2018-09-10T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/09/10/Machine-Learning</id><content type="html" xml:base="http://0.0.0.0:4000/2018/09/10/Machine-Learning/">&lt;p&gt;機械学習の環境を作成する。&lt;/p&gt;

&lt;p&gt;DockerやTensorFlowを入れるのにUbuntuが必要らしい。&lt;br /&gt;
Macの方には、Vagrant等で色々使っているので、&lt;br /&gt;
Windowsマシンの方に、Ubuntu18.04を入れて、 &lt;br /&gt;
デュアルブーストする。&lt;/p&gt;

&lt;p&gt;参考にしたサイトは&lt;a href=&quot;https://www.ttlglab.com/dualboot-ubuntu-windows/&quot;&gt;ここ&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;以下上記のサイトの補足事項です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1章
    &lt;ul&gt;
      &lt;li&gt;特になし&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2章
    &lt;ul&gt;
      &lt;li&gt;自分の場合は、Dドライブを半分に縮小した。
ここでは、縮小した残りの部分を、未使用の領域のままにしておいて良い。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;3章
    &lt;ul&gt;
      &lt;li&gt;特になし&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;4章
    &lt;ul&gt;
      &lt;li&gt;特になし&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;5章
    &lt;ul&gt;
      &lt;li&gt;isoファイルと、書き込み先のUSBドライブが正しく指定できていれば、
他の設定はそのままで良い。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;6章
    &lt;ul&gt;
      &lt;li&gt;自分の場合(HP製ノート)は、F10で、BIOS起動した。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UEFI Boot Order&lt;/code&gt;メニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;USB Disckette on Key〜&lt;/code&gt;をF6で最優先にした。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;7章
    &lt;ul&gt;
      &lt;li&gt;スワップ領域はPCのメモリの大きさに合わせる。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;再起動
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UEFI Boot Order&lt;/code&gt;メニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;OS Boot Manager&lt;/code&gt;をF6で最優先にした。&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UEFI Boot Order&lt;/code&gt;メニューで&lt;code class=&quot;highlighter-rouge&quot;&gt;OS Boot Manager&lt;/code&gt;をエンターすると、Ubuntuが選べるので最優先にする。&lt;/li&gt;
      &lt;li&gt;上記設定にすると、起動後、UnbutuとWindowsを選べるメニュー画面が出てくる。
(EasyBCDはとりあえず不要とする。)&lt;/li&gt;
      &lt;li&gt;Windowsを最優先にしたままだと、Windowsが自動で立ちあがる。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>kamioteppei</name></author><summary type="html">機械学習の環境を作成する。</summary></entry><entry><title type="html">jekyll</title><link href="http://0.0.0.0:4000/2018/09/01/jekyll/" rel="alternate" type="text/html" title="jekyll" /><published>2018-09-01T00:00:00+09:00</published><updated>2018-09-01T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/09/01/jekyll</id><content type="html" xml:base="http://0.0.0.0:4000/2018/09/01/jekyll/">&lt;p&gt;学習した知識の備忘録を残す為に、方法を調査したところ、&lt;br /&gt;
GitHubPageにmarkdownファイルをpushするだけで、&lt;br /&gt;
Webサイトを公開できるということで、&lt;br /&gt;
&lt;a href=&quot;https://jekyllrb.com&quot;&gt;jekyll&lt;/a&gt;を学習しました。&lt;/p&gt;

&lt;p&gt;e-JOINT.jpさんの&lt;a href=&quot;https://github.com/ejointjp/jekyll-for-github-projects&quot;&gt;jekyll-for-github-projects&lt;/a&gt;を&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ git clone&lt;/code&gt;して作成しました。&lt;/p&gt;

&lt;p&gt;DBを使用しない、静的なWebサイトの開発ができるようになります。&lt;/p&gt;

&lt;p&gt;関連して、以下についても学習しました。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;gulp&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kamioteppei</name></author><summary type="html">学習した知識の備忘録を残す為に、方法を調査したところ、 GitHubPageにmarkdownファイルをpushするだけで、 Webサイトを公開できるということで、 jekyllを学習しました。</summary></entry><entry><title type="html">Rails Tutorial</title><link href="http://0.0.0.0:4000/2018/08/01/rails-tutorial/" rel="alternate" type="text/html" title="Rails Tutorial" /><published>2018-08-01T00:00:00+09:00</published><updated>2018-08-01T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/08/01/rails-tutorial</id><content type="html" xml:base="http://0.0.0.0:4000/2018/08/01/rails-tutorial/">&lt;p&gt;&lt;a href=&quot;https://railstutorial.jp/&quot;&gt;Rails Tutorial&lt;/a&gt;を学習しました。&lt;br /&gt;
全14章を理解するのに、１章１日ぐらいかかりました。&lt;br /&gt;
DBを使用した、動的なWebサイトの開発ができるようになります。&lt;/p&gt;

&lt;p&gt;関連して、以下についても学習しました。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;GitHub&lt;/li&gt;
  &lt;li&gt;Heroku&lt;/li&gt;
  &lt;li&gt;Markdown&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kamioteppei</name></author><summary type="html">Rails Tutorialを学習しました。 全14章を理解するのに、１章１日ぐらいかかりました。 DBを使用した、動的なWebサイトの開発ができるようになります。</summary></entry><entry><title type="html">Web関連の学習開始</title><link href="http://0.0.0.0:4000/2018/07/01/before/" rel="alternate" type="text/html" title="Web関連の学習開始" /><published>2018-07-01T00:00:00+09:00</published><updated>2018-07-01T00:00:00+09:00</updated><id>http://0.0.0.0:4000/2018/07/01/before</id><content type="html" xml:base="http://0.0.0.0:4000/2018/07/01/before/">&lt;p&gt;Web関連の技術をこれから学習します。&lt;/p&gt;

&lt;p&gt;まず、Web関連の技術系のサイトの内容は、&lt;br /&gt;
Macが前提になっていることが多いので、MacBook Proを購入しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dotinstall.com/lessons&quot;&gt;ドットインストール&lt;/a&gt;で、&lt;br /&gt;
Railsをかじったので、Vagrant環境の構築を覚えました。&lt;/p&gt;</content><author><name>kamioteppei</name></author><summary type="html">Web関連の技術をこれから学習します。</summary></entry></feed>